name: Update MaterialTheme from Tokens

on:
  push:
    branches: [main, master]
    paths: ['tokens.json']
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-theme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requirements
        run: pip install json5

      - name: Update Colors and Spacing
        run: |
          python3 << 'EOF'
          import json5
          import os
          
          # Load tokens
          with open('tokens.json', 'r') as f:
              tokens = json5.load(f)
          
          # Extract basic colors
          primary_color = "#7d4dbe"
          secondary_color = "#6436ab" 
          error_color = "#e1251b"
          surface_color = "#ffffff"
          background_color = "#f6f6f6"
          
          if 'global' in tokens:
              global_tokens = tokens['global']
              
              # Get primary colors
              if 'Background' in global_tokens and 'section-primary' in global_tokens['Background']:
                  primary_color = global_tokens['Background']['section-primary']['value']
              
              if 'Button' in global_tokens and 'primary' in global_tokens['Button']:
                  if 'hover-bg' in global_tokens['Button']['primary']:
                      secondary_color = global_tokens['Button']['primary']['hover-bg']['value']
              
              # Get surface colors
              if 'Background' in global_tokens:
                  if 'surface-default' in global_tokens['Background']:
                      surface_color = global_tokens['Background']['surface-default']['value']
                  if 'surface-alt' in global_tokens['Background']:
                      background_color = global_tokens['Background']['surface-alt']['value']
              
              # Get error color
              if 'Text' in global_tokens and 'text-error' in global_tokens['Text']:
                  error_color = global_tokens['Text']['text-error']['value']
          
          # Extract spacing values
          spacing_values = {}
          if 'Color & Spacing Tokens/Value' in tokens and 'space' in tokens['Color & Spacing Tokens/Value']:
              space_tokens = tokens['Color & Spacing Tokens/Value']['space']
              for key, space_data in space_tokens.items():
                  if isinstance(space_data, dict) and 'value' in space_data:
                      # Convert px values to dp (remove 'px' and keep the number)
                      px_value = space_data['value'].replace('px', '')
                      spacing_values[key] = px_value
          
          # Create simple color file
          color_content = "package com.example.tokentest.ui.theme\n\n"
          color_content += "import androidx.compose.ui.graphics.Color\n\n"
          color_content += "// Auto-generated from tokens.json\n"
          color_content += "val Primary = Color(0xFF" + primary_color.replace('#', '') + ")\n"
          color_content += "val Secondary = Color(0xFF" + secondary_color.replace('#', '') + ")\n"
          color_content += "val ErrorColor = Color(0xFF" + error_color.replace('#', '') + ")\n"
          color_content += "val Surface = Color(0xFF" + surface_color.replace('#', '') + ")\n"
          color_content += "val Background = Color(0xFF" + background_color.replace('#', '') + ")\n\n"
          color_content += "// Legacy colors for compatibility\n"
          color_content += "val Purple80 = Color(0xFFD0BCFF)\n"
          color_content += "val PurpleGrey80 = Color(0xFFCCC2DC)\n"
          color_content += "val Pink80 = Color(0xFFEFB8C8)\n"
          color_content += "val Purple40 = Primary\n"
          color_content += "val PurpleGrey40 = Secondary\n"
          color_content += "val Pink40 = ErrorColor\n"
          
          # Write color file
          with open('app/src/main/java/com/example/tokentest/ui/theme/Color.kt', 'w') as f:
              f.write(color_content)
          
          # Create spacing file
          spacing_content = "package com.example.tokentest.ui.theme\n\n"
          spacing_content += "import androidx.compose.ui.unit.dp\n\n"
          spacing_content += "// Auto-generated spacing from tokens.json\n"
          
          # Add spacing constants
          spacing_names = {
              "0": "None",
              "50": "XXS", 
              "100": "XS",
              "150": "SM",
              "200": "MD", 
              "300": "LG",
              "400": "XL",
              "500": "XXL",
              "600": "XXXL",
              "800": "Giant",
              "1000": "Huge",
              "1200": "Massive"
          }
          
          for key, dp_value in spacing_values.items():
              if key in spacing_names:
                  name = spacing_names[key]
                  spacing_content += "val Spacing" + name + " = " + dp_value + ".dp\n"
          
          spacing_content += "\n// Common spacing shortcuts\n"
          spacing_content += "val PaddingSmall = SpacingMD\n"
          spacing_content += "val PaddingMedium = SpacingXL\n" 
          spacing_content += "val PaddingLarge = SpacingXXL\n"
          
          # Write spacing file
          with open('app/src/main/java/com/example/tokentest/ui/theme/Spacing.kt', 'w') as f:
              f.write(spacing_content)
          
          print("✅ Updated colors and spacing successfully!")
          print(f"📏 Found {len(spacing_values)} spacing tokens")
          EOF

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app/src/main/java/com/example/tokentest/ui/theme/Color.kt
          git add app/src/main/java/com/example/tokentest/ui/theme/Spacing.kt
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "🎨 Update primary colors and spacing from tokens.json"
            git push https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:${{ github.ref_name }}
          fi
