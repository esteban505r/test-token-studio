name: Update MaterialTheme from Tokens

on:
  push:
    branches: [main, master]
    paths: ['tokens.json']
  workflow_dispatch:

jobs:
  update-theme:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install requirements
        run: pip install json5

      - name: Update Colors and Spacing
        run: |
          python3 << 'EOF'
          import json5
          import os

          # Load tokens
          with open('tokens.json', 'r') as f:
              tokens = json5.load(f)

          # Extract basic colors
          primary_color = "#7d4dbe"
          secondary_color = "#6436ab" 
          error_color = "#e1251b"
          surface_color = "#ffffff"
          background_color = "#f6f6f6"

          if 'global' in tokens:
              global_tokens = tokens['global']
              
              # Get primary colors
              if 'Background' in global_tokens and 'section-primary' in global_tokens['Background']:
                  primary_color = global_tokens['Background']['section-primary']['value']
              
              if 'Button' in global_tokens and 'primary' in global_tokens['Button']:
                  if 'hover-bg' in global_tokens['Button']['primary']:
                      secondary_color = global_tokens['Button']['primary']['hover-bg']['value']
              
              # Get surface colors
              if 'Background' in global_tokens:
                  if 'surface-default' in global_tokens['Background']:
                      surface_color = global_tokens['Background']['surface-default']['value']
                  if 'surface-alt' in global_tokens['Background']:
                      background_color = global_tokens['Background']['surface-alt']['value']
              
              # Get error color
              if 'Text' in global_tokens and 'text-error' in global_tokens['Text']:
                  error_color = global_tokens['Text']['text-error']['value']

          # Create simple color file
          color_content = '''package com.example.tokentest.ui.theme

import androidx.compose.ui.graphics.Color

// Auto-generated from tokens.json
val Primary = Color(0xFF''' + primary_color.replace('#', '') + ''')
val Secondary = Color(0xFF''' + secondary_color.replace('#', '') + ''')
val ErrorColor = Color(0xFF''' + error_color.replace('#', '') + ''')
val Surface = Color(0xFF''' + surface_color.replace('#', '') + ''')
val Background = Color(0xFF''' + background_color.replace('#', '') + ''')

// Legacy colors for compatibility
val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)
val Purple40 = Primary
val PurpleGrey40 = Secondary
val Pink40 = ErrorColor
'''

          # Write color file
          with open('app/src/main/java/com/example/tokentest/ui/theme/Color.kt', 'w') as f:
              f.write(color_content)

          print("âœ… Updated colors successfully!")
          EOF

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add app/src/main/java/com/example/tokentest/ui/theme/Color.kt
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "ðŸŽ¨ Update primary colors from tokens.json"
            git push
          fi
